<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="renderer_8C" kind="file" language="C++">
    <compoundname>renderer.C</compoundname>
    <includes refid="renderer_8H" local="yes">renderer.H</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="2">
        <label>renderer.H</label>
        <link refid="renderer_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/umar/Desktop/workstation/CGui/WxWidget/src/renderer.C</label>
        <link refid="renderer_8C"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>GL/gl.h</label>
      </node>
      <node id="4">
        <label>GL/glu.h</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Rendering 2D Using OpenGL logic. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (C) 2025 Umar Ba <ulink url="mailto:jUmarB@protonmail.com">jUmarB@protonmail.com</ulink> This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <ulink url="https://www.gnu.org/licenses/">https://www.gnu.org/licenses/</ulink>. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/>&quot;<ref refid="renderer_8H" kindref="compound">renderer.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classRenderer_1a55482d49aa42d8e2d13ebed007a25052" refkind="member"><highlight class="normal"><ref refid="classRenderer_1a4dddd75ab18573a3686f90225f3f03d4" kindref="member">Renderer::Renderer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>form)<sp/>:<sp/>_form_options<sp/>{form}<sp/>{}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classRenderer_1afc711f32933d61863420f8443cb4a632" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderer_1afc711f32933d61863420f8443cb4a632" kindref="member">Renderer::setforms</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>form_flags)<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>_form_options=<sp/>form_flags<sp/><sp/>;<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classRenderer_1ab45b83dcdf09d55ca17ff6fde5db14f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classRenderer_1ab45b83dcdf09d55ca17ff6fde5db14f7" kindref="member">Renderer::getforms</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_form_options<sp/>;<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classRenderer_1a54c2f582951c35c16f6bba2c4e5be9f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderer_1a54c2f582951c35c16f6bba2c4e5be9f8" kindref="member">Renderer::display</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>forms<sp/>=<sp/><sp/><ref refid="classRenderer_1ab45b83dcdf09d55ca17ff6fde5db14f7" kindref="member">getforms</ref>()<sp/><sp/>;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>glClearColor(0.15f,<sp/>0.15f,<sp/>0.2f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!forms)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>glFlush();<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>glPushMatrix()<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>glScalef(_scl,<sp/>_scl,<sp/>1.0f);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>glRotatef(_rot,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forms<sp/>&amp;<sp/><sp/><ref refid="renderer_8H_1a81e740affbfe277e9cf7f3f091621173" kindref="member">TRIANGLES</ref>)<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="renderer_8H_1a124289e60ff6220ac0f346388762c393" kindref="member">OPENGL_OBJECT</ref>(<ref refid="renderer_8H_1a81e740affbfe277e9cf7f3f091621173" kindref="member">TRIANGLES</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forms<sp/>&amp;<sp/><sp/><ref refid="renderer_8H_1a5d04f8961ac904da1383d46700f0a5da" kindref="member">QUADS</ref><sp/>)<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="renderer_8H_1a124289e60ff6220ac0f346388762c393" kindref="member">OPENGL_OBJECT</ref>(<ref refid="renderer_8H_1a5d04f8961ac904da1383d46700f0a5da" kindref="member">QUADS</ref>,glColor3f(1.0f,<sp/>1.0f,<sp/>0.0f));<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forms<sp/><sp/>&amp;<sp/><ref refid="renderer_8H_1aa2aaa9b563acdbb2af4a8679f19f2426" kindref="member">POLYGON</ref>)<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="renderer_8H_1a124289e60ff6220ac0f346388762c393" kindref="member">OPENGL_OBJECT</ref>(<ref refid="renderer_8H_1aa2aaa9b563acdbb2af4a8679f19f2426" kindref="member">POLYGON</ref><sp/>,glColor3f(0.2f,<sp/>0.8f,<sp/>1.0f))<sp/>;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>glPopMatrix()<sp/>;<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>glFlush();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classRenderer_1a693ac5762e3d9b3317038ab111d1ef9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderer_1a693ac5762e3d9b3317038ab111d1ef9f" kindref="member">Renderer::rotate_forms</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle)<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>_rot<sp/>=<sp/>angle<sp/>;<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classRenderer_1ac7b99d2aa500e76f6d4ca0b76c4bc725" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRenderer_1ac7b99d2aa500e76f6d4ca0b76c4bc725" kindref="member">Renderer::scale_forms</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale)<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>_scl<sp/>=<sp/>scale<sp/>;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/umar/Desktop/workstation/CGui/WxWidget/src/renderer.C"/>
  </compounddef>
</doxygen>
