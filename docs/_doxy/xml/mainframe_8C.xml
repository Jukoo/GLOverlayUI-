<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="mainframe_8C" kind="file" language="C++">
    <compoundname>mainframe.C</compoundname>
    <includes refid="mainframe_8H" local="yes">mainframe.H</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="8">
        <label>GLOverlayUI_config.in.H</label>
        <link refid="GLOverlayUI__config_8in_8H"/>
      </node>
      <node id="9">
        <label>canvasdriver.H</label>
        <link refid="canvasdriver_8H"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mainframe.H</label>
        <link refid="mainframe_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/umar/Desktop/workstation/CGui/WxWidget/src/mainframe.C</label>
        <link refid="mainframe_8C"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>GL/gl.h</label>
      </node>
      <node id="12">
        <label>GL/glu.h</label>
      </node>
      <node id="13">
        <label>GL/glut.h</label>
      </node>
      <node id="15">
        <label>cstdio</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="5">
        <label>wx/aboutdlg.h</label>
      </node>
      <node id="10">
        <label>wx/glcanvas.h</label>
      </node>
      <node id="6">
        <label>wx/splitter.h</label>
      </node>
      <node id="4">
        <label>wx/wx.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>main frame application implementation </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Umar Ba <ulink url="mailto:jUmarB@protonmail.com">jUmarB@protonmail.com</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mainframe_8H" kindref="compound">mainframe.H</ref>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="classMainFrame_1a2329fd01577ea2ebf4063757ec6ddf2e" kindref="member">MainFrame::MainFrame</ref>(std::basic_string&lt;char&gt;<sp/>app_title)<sp/>:<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>wxFrame(nullptr<sp/>,<sp/>wxID_ANY<sp/>,<sp/><sp/>app_title<sp/>,<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxPoint(0,0),<sp/>wxSize(<ref refid="mainframe_8H_1ab6698091c06f224c058b04315666190a" kindref="member">MF_SIZE</ref>),<ref refid="mainframe_8H_1aa94c752bbd681d9dc223733a0f9ad7bb" kindref="member">DEF_FRAME_STYLE</ref>(0)<sp/>),<sp/>_app_title(app_title)<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>setup_menubar();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>define_layout()<sp/>;<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>CreateStatusBar()<sp/>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>SetStatusText(</highlight><highlight class="stringliteral">&quot;GLOverlayUI<sp/>version<sp/><sp/>0.1.0-a1&quot;</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>Bind(wxEVT_MENU<sp/>,<sp/>&amp;MainFrame::on_about<sp/>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>,wxID_ABOUT)<sp/>;<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>Bind(wxEVT_MENU<sp/>,<sp/>&amp;MainFrame::on_exit<sp/>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>,wxID_EXIT)<sp/>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="classMainFrame_1a0cfd88ece4836e0ea5430bd55370bf11" kindref="member">MainFrame::~MainFrame</ref>(){}<sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMainFrame_1a1bd9055232235f241fe40c7ac9d35cda" kindref="member">MainFrame::setup_menubar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>wxMenu<sp/>*helper<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxMenu<sp/>;<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>helper-&gt;Append(wxID_EXIT)<sp/>;<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>helper-&gt;AppendSeparator()<sp/>;<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>helper-&gt;Append(wxID_ABOUT,</highlight><highlight class="stringliteral">&quot;&amp;About<sp/>\tCtrl+a&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>wxMenu<sp/>*panel_settings<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxMenu<sp/>;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>wxMenuBar<sp/>*<sp/><sp/>menu_bar<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxMenuBar<sp/>;<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>menu_bar-&gt;Append(helper<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&amp;Help&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>SetMenuBar(menu_bar)<sp/>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>wxToolBar*<sp/>tb<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><sp/>wxToolBar(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>,<sp/>wxID_ANY)<sp/>;<sp/></highlight><highlight class="comment">//CreateToolBar();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tb-&gt;Bind(wxEVT_TOOL,<sp/>&amp;MainFrame::OnTogglePanel,<sp/>this);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tb-&gt;Realize();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMainFrame_1a84b2c7aa31e7161950f78b669df18b0c" kindref="member">MainFrame::define_layout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>panel_sizes<sp/>=<sp/><sp/><sp/><ref refid="classMainFrame_1a1dfcef17988617e91424d1819c3669d2" kindref="member">panel_sizing_layout_rule</ref>()<sp/>;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>_main_boxsizer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBoxSizer(wxHORIZONTAL)<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::vector&lt;wxPanel<sp/>*&gt;<sp/>panels<sp/><sp/>=<sp/>createpanels(this,<sp/>2<sp/>,<sp/>panel_sizing_layout_rule);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>_panels[</highlight><highlight class="stringliteral">&quot;ctrl&quot;</highlight><highlight class="normal">]=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxPanel(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>wxID_ANY<sp/>,wxDefaultPosition<sp/>,<sp/>wxSize((panel_sizes<sp/>&amp;<sp/>0xffff),<sp/>~0))<sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>_panels[</highlight><highlight class="stringliteral">&quot;ctrl&quot;</highlight><highlight class="normal">]-&gt;SetBackgroundColour(*wxLIGHT_GREY);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>_panels[</highlight><highlight class="stringliteral">&quot;canvas&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxPanel(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,wxID_ANY<sp/>,wxDefaultPosition<sp/>,<sp/>wxSize((panel_sizes<sp/>&gt;&gt;<sp/>0x10)<sp/>,<sp/>~0))<sp/>;<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>wxBoxSizer<sp/>*<sp/>ctrl_panel_vbox<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBoxSizer(wxVERTICAL)<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>wxStaticText<sp/>*slider_label<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxStaticText(_panels[</highlight><highlight class="stringliteral">&quot;ctrl&quot;</highlight><highlight class="normal">]<sp/>,<sp/>wxID_ANY<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Rotation<sp/>/Scale&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>ctrl_panel_vbox-&gt;Add(slider_label<sp/>,<sp/>0<sp/>,<sp/><sp/>wxALIGN_CENTER<sp/>,<sp/>5)<sp/>;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>_slider<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxSlider(_panels[</highlight><highlight class="stringliteral">&quot;ctrl&quot;</highlight><highlight class="normal">]<sp/>,<sp/>wxID_ANY<sp/>,10<sp/>,<sp/>0<sp/>,<sp/>100,<sp/>wxDefaultPosition<sp/>,<sp/>wxDefaultSize<sp/>,<sp/><sp/>wxSL_HORIZONTAL);<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>_slider-&gt;Bind(wxEVT_SLIDER<sp/>,<sp/><sp/>&amp;MainFrame::on_sliding<sp/>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>ctrl_panel_vbox-&gt;Add(_slider<sp/><sp/>,<sp/>0<sp/><sp/>,<sp/>wxEXPAND|<sp/>wxALL<sp/>,<sp/>5<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>_checkbox<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxCheckBox(_panels[</highlight><highlight class="stringliteral">&quot;ctrl&quot;</highlight><highlight class="normal">]<sp/><sp/>,<sp/>wxID_ANY<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>Object&quot;</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>_checkbox-&gt;Bind(wxEVT_CHECKBOX<sp/>,<sp/>&amp;MainFrame::on_checking<sp/>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>;<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>ctrl_panel_vbox-&gt;Add(_checkbox<sp/>,<sp/>0<sp/>,<sp/>wxEXPAND|<sp/>wxALL,10)<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>_panels[</highlight><highlight class="stringliteral">&quot;ctrl&quot;</highlight><highlight class="normal">]-&gt;SetSizer(ctrl_panel_vbox)<sp/>;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>wxBoxSizer<sp/>*canvas_panel_vbox<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBoxSizer(wxHORIZONTAL)<sp/>;<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>_canvas_driver=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCanvasDriver" kindref="compound">CanvasDriver</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>canvas_panel_vbox-&gt;Add(_canvas_driver<sp/>,<sp/>1<sp/>,<sp/>wxEXPAND|<sp/>wxALL<sp/>,1)<sp/><sp/>;<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>_panels[</highlight><highlight class="stringliteral">&quot;canvas&quot;</highlight><highlight class="normal">]-&gt;SetSizer(canvas_panel_vbox)<sp/>;<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>panel<sp/>:<sp/><sp/>_panels<sp/>)<sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>_main_boxsizer-&gt;Add(panel.second,<sp/>(i=-~i),<sp/>wxEXPAND|wxALL<sp/>,<sp/>5)<sp/>;<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>SetSizer(_main_boxsizer)<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>Center()<sp/>;<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classMainFrame_1a1dfcef17988617e91424d1819c3669d2" kindref="member">MainFrame::panel_sizing_layout_rule</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ctlr<sp/>;<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>canvas;<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}<sp/>panels<sp/>=<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mainframe_8H_1a8aad34522f51f4254632370286f27c0a" kindref="member">DEF_BASE_SIZE</ref><sp/>/<sp/>3<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>panels.canvas<sp/>=<sp/><ref refid="mainframe_8H_1a8aad34522f51f4254632370286f27c0a" kindref="member">DEF_BASE_SIZE</ref><sp/>-<sp/>panels.ctlr<sp/>;<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/>(panels.canvas&lt;&lt;<sp/>0x10<sp/>|<sp/>panels.ctlr)<sp/>;<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*====================Event<sp/>Handling<sp/>==============================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainFrame::on_exit(wxCommandEvent<sp/>&amp;<sp/>evt)<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>Close(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainFrame::on_about(wxCommandEvent<sp/><sp/>&amp;<sp/>evt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>wxAboutDialogInfo<sp/><sp/>about<sp/>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>about.SetName(<ref refid="mainframe_8H_1abce3c9120e09e75fd797f72f1b4a4cfb" kindref="member">APP_TITLE</ref>);<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>about.SetVersion(</highlight><highlight class="stringliteral">&quot;GLOverlayUI<sp/>version<sp/>0.1.0-a1&quot;</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>about.SetCopyright(</highlight><highlight class="stringliteral">&quot;(C)<sp/>CopyRight<sp/>2025&quot;</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>about.AddDeveloper(</highlight><highlight class="stringliteral">&quot;Umar<sp/>Ba<sp/>&lt;jUmarB@protonmail.com&gt;<sp/>&quot;</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>wxIcon<sp/><sp/>ico(<ref refid="mainframe_8H_1a0d6ecdcf79fa71c6244071915b31e3c0" kindref="member">APP_ICO</ref>,<sp/>wxBITMAP_TYPE_BMP<sp/>,<sp/>0x64<sp/>,<sp/>0x64)<sp/>;<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>about.SetIcon(ico)<sp/>;<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>wxAboutBox(about)<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainFrame::on_checking(wxCommandEvent<sp/><sp/>&amp;<sp/>evt)<sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>_main_boxsizer-&gt;Hide(&amp;*_panels[</highlight><highlight class="stringliteral">&quot;ctrl&quot;</highlight><highlight class="normal">])<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>Layout()<sp/>;<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>MainFrame::on_sliding(wxCommandEvent<sp/><sp/>&amp;<sp/>evt)<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;slid&quot;</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/umar/Desktop/workstation/CGui/WxWidget/src/mainframe.C"/>
  </compounddef>
</doxygen>
