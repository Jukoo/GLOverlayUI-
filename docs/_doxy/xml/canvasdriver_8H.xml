<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="canvasdriver_8H" kind="file" language="C++">
    <compoundname>canvasdriver.H</compoundname>
    <includes local="no">wx/wx.h</includes>
    <includes local="no">wx/glcanvas.h</includes>
    <includes local="no">GL/gl.h</includes>
    <includes local="no">GL/glu.h</includes>
    <includes local="no">memory</includes>
    <includes refid="renderer_8H" local="yes">renderer.H</includes>
    <includedby refid="mainframe_8H" local="yes">/home/umar/Desktop/workstation/CGui/WxWidget/include/mainframe.H</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/umar/Desktop/workstation/CGui/WxWidget/include/canvasdriver.H</label>
        <link refid="canvasdriver_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>renderer.H</label>
        <link refid="renderer_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>GL/gl.h</label>
      </node>
      <node id="5">
        <label>GL/glu.h</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="3">
        <label>wx/glcanvas.h</label>
      </node>
      <node id="2">
        <label>wx/wx.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/umar/Desktop/workstation/CGui/WxWidget/include/canvasdriver.H</label>
        <link refid="canvasdriver_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/umar/Desktop/workstation/CGui/WxWidget/include/mainframe.H</label>
        <link refid="mainframe_8H"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classCanvasDriver" prot="public">CanvasDriver</innerclass>
    <briefdescription>
<para>Kind of bridge for layout interaction and OpenGL render. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>(C) 2025 Umar Ba <ulink url="mailto:jUmarB@protonmail.com">jUmarB@protonmail.com</ulink> This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <ulink url="https://www.gnu.org/licenses/">https://www.gnu.org/licenses/</ulink>. </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(GLOverlayUI_canvasdriver_h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>GLOverlayUI_canvasdriver_h<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wx.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/glcanvas.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GL/gl.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GL/glu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderer_8H" kindref="compound">renderer.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=<sp/>201402L<sp/>)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>uniq_allocator(__object)<sp/><sp/>std::unique_ptr&lt;__object&gt;<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>shrd_allocator(__object)<sp/><sp/>std::shared_ptr&lt;__object&gt;<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>mkptr(__type<sp/>,<sp/>__object<sp/>,<sp/>...<sp/>)<sp/><sp/>std::make_##__type&lt;__object&gt;<sp/>(__VA_ARGS__)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>uniq_allocator(__object)<sp/><sp/><sp/>__object<sp/>*<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>shrd_allocator(__object)<sp/><sp/><sp/>__object<sp/>*<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>mkptr(__type<sp/></highlight><highlight class="comment">/*<sp/>ignored<sp/>*/</highlight><highlight class="preprocessor"><sp/>,<sp/>__object<sp/>,...<sp/>)<sp/><sp/><sp/>new<sp/>__object<sp/>(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>__cpp_11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classCanvasDriver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCanvasDriver" kindref="compound">CanvasDriver</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><sp/>wxGLCanvas<sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>uniq_allocator(wxGLContext)<sp/>_ctx<sp/><sp/>;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--<sp/><sp/>Canvas<sp/><sp/>Event<sp/>--<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_painting(wxPaintEvent&amp;)<sp/>;<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_resizing(wxSizeEvent&amp;)<sp/>;<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_mouse(wxMouseEvent&amp;)<sp/>;<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_mouse_grab(wxMouseEvent&amp;)<sp/>;<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_mouse_release(wxMouseEvent&amp;);<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_mouse_grab_state<sp/>=<sp/>false<sp/>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classRenderer" kindref="compound">Renderer</ref><sp/>_renderer<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_show<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="76" refid="classCanvasDriver_1a00d082182dd62773e59b9b9ba59849c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanvasDriver_1a00d082182dd62773e59b9b9ba59849c6" kindref="member">CanvasDriver</ref>(wxWindow<sp/><sp/>*<sp/>mainframe_parent);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classCanvasDriver_1a3abaefa4fe6991a71ab7ac1a662e8f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><sp/><ref refid="classCanvasDriver_1a3abaefa4fe6991a71ab7ac1a662e8f66" kindref="member">~CanvasDriver</ref>()<sp/>;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classCanvasDriver_1abc701ae83ad51030115ba6490730f5b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classCanvasDriver_1abc701ae83ad51030115ba6490730f5b3" kindref="member">CanvasDriver_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classCanvasDriver_1a47f9f434ea2d275d2779825176f23585" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanvasDriver_1a47f9f434ea2d275d2779825176f23585" kindref="member">apply_rotation</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rotation_angle)<sp/>;<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="classCanvasDriver_1aa99ed92d57e3cdc8e13596f9f42d5041" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanvasDriver_1aa99ed92d57e3cdc8e13596f9f42d5041" kindref="member">apply_scaling</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>scale)<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="classCanvasDriver_1aaf772d52ae181146d59c5c503f6786f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanvasDriver_1aaf772d52ae181146d59c5c503f6786f6" kindref="member">increase_or_decrease_scaling</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>)<sp/>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classCanvasDriver_1af9ca95586488aaca0f8c73a0ab7c5002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanvasDriver_1af9ca95586488aaca0f8c73a0ab7c5002" kindref="member">renderer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>forms_bit_mask)<sp/>;<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classCanvasDriver_1a4807bc38743f9f93b276a82d8afd0672" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanvasDriver_1a4807bc38743f9f93b276a82d8afd0672" kindref="member">toggle_renderer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="classCanvasDriver_1a9fa09da05f675d9f10cd945a9965dc50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCanvasDriver_1a9fa09da05f675d9f10cd945a9965dc50" kindref="member">get_renderer_state</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/>;<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classCanvasDriver_1ab3396951fd4de41f87d5a79e93d6e1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanvasDriver_1ab3396951fd4de41f87d5a79e93d6e1c6" kindref="member">set_renderer_state</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)<sp/>;<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal">};<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="/home/umar/Desktop/workstation/CGui/WxWidget/include/canvasdriver.H"/>
  </compounddef>
</doxygen>
